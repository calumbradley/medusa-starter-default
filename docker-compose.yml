services:
  medusa-db:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: medusa
      POSTGRES_DB: medusa-app
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - medusa-network

  medusa-app:
    build:
      context: ./
      dockerfile: Dockerfile.app
    container_name: medusa-app
    depends_on:
      - medusa-db
    environment:
      DATABASE_URL: postgres://postgres:medusa@medusa-db:5432/medusa-app?ssl_mode=disable
    ports:
      - "9000:9000"
    networks:
      - medusa-network

  medusa-storefront-app:
    build:
      context: ./medusa-storefront
      dockerfile: Dockerfile.storefront
    container_name: medusa-storefront-app
    ports:
      - "8000:8000"
    environment:
      MEDUSA_BACKEND_URL: http://medusa-app:9000
    depends_on:
      - medusa-app
    networks:
      - medusa-network

  nginx:
    build:
      context: ./
      dockerfile: Dockerfile.nginx
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - medusa-storefront-app
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - certbot-www:/var/www/certbot
    networks:
      - medusa-network

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - certbot-www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew --webroot -w /var/www/certbot; sleep 12h & wait $${!}; done;'"
    networks:
      - medusa-network

volumes:
  pgdata:
  certbot-etc:
  certbot-var:
  certbot-www:

networks:
  medusa-network:
